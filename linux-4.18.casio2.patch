diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 12aa749..0d1ed6e 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -18,7 +18,7 @@
 #include "../workqueue_internal.h"
 #include "../smpboot.h"
 
-#include <uapi/linux/sched.h>
+#include <uapi/linux/sched/types.h>
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/sched.h>
@@ -4161,7 +4161,7 @@ static void __setscheduler(struct rq *rq, struct task_struct *p,
  * Setting the sched class field of the struct task struct variable that represents the task in the system with the address of new scheduling class variable.
  */
 #ifdef CONFIG_SCHED_CASIO_POLICY
-        else if ((p->prio) == SCHED_CASIO)
+        else if ((p->policy) == SCHED_CASIO)
                 p->sched_class = &casio_sched_class;
 #endif
 	else
@@ -4809,7 +4809,7 @@ SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 	attr.sched_policy = p->policy;
 	if (p->sched_reset_on_fork)
 		attr.sched_flags |= SCHED_FLAG_RESET_ON_FORK;
-	else if (task_has_dl_policy(p))
+	if (task_has_dl_policy(p))
 		__getparam_dl(p, &attr);
 	else if (task_has_rt_policy(p))
 		attr.sched_priority = p->rt_priority;
